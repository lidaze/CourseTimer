{"ast":null,"code":"var _jsxFileName = \"/Users/joyful/Personal/Projects/class-timer/src/TimeProgress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport './TimeProgress.css';\nimport { Button, Alert, Tag } from 'antd';\nimport { CoffeeOutlined, ClockCircleOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ({\n  sessions,\n  courseDuration = 120\n}) => {\n  _s();\n  const maxTime = 120; // 120 * 60;\n\n  const containerRef = useRef(null);\n  const [ongoing, setOngoing] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [restTime, setRestTime] = useState(0); // 休息时间\n  const ongoingTimerId = useRef();\n  const breakTimerId = useRef();\n  useEffect(() => {\n    console.log('cc:', currentTime);\n    ongoingTimerId.current = setInterval(() => {\n      setCurrentTime(t => t + 1);\n    }, 1000);\n    return () => {\n      if (currentTime >= maxTime) {\n        clearInterval(ongoingTimerId.current);\n        setCurrentTime(maxTime);\n      }\n    };\n  }, [currentTime]); // ✅ Now count is not a dependency\n\n  const handleStart = () => {\n    if (!containerRef.current) return;\n    setOngoing(true);\n    clearInterval(breakTimerId.current);\n    setCurrentTime(old => old + 1);\n\n    // ongoingTimerId.current = setInterval(() => {\n    //   if (currentTime >= maxTime) {\n    //     clearInterval(ongoingTimerId.current);\n    //     setCurrentTime(maxTime);\n    //     return;\n    //   }\n\n    //   setCurrentTime((t) => t + 1);\n    // }, 1000);\n  };\n\n  const handleTakeABreak = () => {\n    setOngoing(false);\n    clearInterval(ongoingTimerId.current);\n    breakTimerId.current = setInterval(() => {\n      setRestTime(old => old + 1);\n    }, 1000);\n  };\n  const showRestTime = () => {\n    if (restTime === 0) return null;\n    const restP = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have rested for\", ' ', /*#__PURE__*/_jsxDEV(Tag, {\n        icon: /*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this),\n        color: \"#f50\",\n        children: _formatTimeFromSeconds(restTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"rest-time-content\",\n      message: restP,\n      type: \"info\",\n      icon: /*#__PURE__*/_jsxDEV(CoffeeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n  const timeProgressBar = () => {\n    const barPercent = currentTime / maxTime * 100;\n    const backgroundDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-progress-bar-bg\",\n      style: {\n        width: `${barPercent}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      ref: containerRef,\n      children: [sessions.map((session, i) => {\n        const style = {\n          width: `${session.time / 120 * 100}%`,\n          backgroundColor: session.color\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-item\",\n          style: style,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: session.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: [session.time, \"mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      }), backgroundDiv]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  };\n  const currentTimeAndTotalTimeContent = () => {\n    // const currentTimeStr = _formatTimeFromSeconds(currentTime);\n    const totalTime = _formatTimeFromSeconds(courseDuration);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-content\",\n      children: [/*#__PURE__*/_jsxDEV(Tag, {\n        style: {\n          marginRight: 8\n        },\n        children: _formatTimeFromSeconds(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'gray'\n        },\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        style: {\n          margin: '0 0 0 8px'\n        },\n        children: _formatTimeFromSeconds(courseDuration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n  const buttonsContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-content\",\n      children: ongoing ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: handleTakeABreak,\n        children: \"Take a Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"large\",\n        onClick: handleStart,\n        children: currentTime !== 0 ? 'Continue' : `Let's start the class.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-progress-container\",\n    children: [showRestTime(), timeProgressBar(), currentTimeAndTotalTimeContent(), buttonsContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Idxte2KfyHuHbzMgbcPLk7hwT50=\");\n_c = App;\nexport default App;\nfunction _formatTimeFromSeconds(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const remainingSeconds = seconds % 60;\n  const formattedHours = String(hours).padStart(2, '0');\n  const formattedMinutes = String(minutes).padStart(2, '0');\n  const formattedSeconds = String(remainingSeconds).padStart(2, '0');\n  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n}\n\n// Example usage:\n// const totalSeconds = 3665; // For example, 3665 seconds\n// const formattedTime = _formatTimeFromSeconds(totalSeconds);\n// console.log(formattedTime); // Output: \"01:01:05\"\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","Alert","Tag","CoffeeOutlined","ClockCircleOutlined","jsxDEV","_jsxDEV","App","sessions","courseDuration","_s","maxTime","containerRef","ongoing","setOngoing","currentTime","setCurrentTime","restTime","setRestTime","ongoingTimerId","breakTimerId","console","log","current","setInterval","t","clearInterval","handleStart","old","handleTakeABreak","showRestTime","restP","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","color","_formatTimeFromSeconds","className","message","type","timeProgressBar","barPercent","backgroundDiv","style","width","ref","map","session","i","time","backgroundColor","title","currentTimeAndTotalTimeContent","totalTime","marginRight","margin","buttonsContent","size","onClick","_c","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","$RefreshReg$"],"sources":["/Users/joyful/Personal/Projects/class-timer/src/TimeProgress.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport './TimeProgress.css';\nimport { Card, Button, Space, Alert, Tag } from 'antd';\nimport { CoffeeOutlined, ClockCircleOutlined } from '@ant-design/icons';\n\ninterface Props {\n  sessions: { title: string; time: number; color: string }[];\n  courseDuration?: number; // minute\n}\n\nconst App: React.FC<Props> = ({ sessions, courseDuration = 120 }) => {\n  const maxTime = 120; // 120 * 60;\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [ongoing, setOngoing] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [restTime, setRestTime] = useState(0); // 休息时间\n  const ongoingTimerId = useRef<NodeJS.Timer>();\n  const breakTimerId = useRef<NodeJS.Timer>();\n\n  useEffect(() => {\n    console.log('cc:', currentTime);\n    ongoingTimerId.current = setInterval(() => {\n      setCurrentTime((t) => t + 1);\n    }, 1000);\n    \n    return () => {\n      if (currentTime >= maxTime) {\n        clearInterval(ongoingTimerId.current);\n        setCurrentTime(maxTime);\n      }\n    };\n  }, [currentTime]); // ✅ Now count is not a dependency\n\n  const handleStart = () => {\n    if (!containerRef.current) return;\n\n    setOngoing(true);\n    clearInterval(breakTimerId.current);\n    setCurrentTime((old) => old + 1);\n\n    // ongoingTimerId.current = setInterval(() => {\n    //   if (currentTime >= maxTime) {\n    //     clearInterval(ongoingTimerId.current);\n    //     setCurrentTime(maxTime);\n    //     return;\n    //   }\n\n    //   setCurrentTime((t) => t + 1);\n    // }, 1000);\n  };\n\n  const handleTakeABreak = () => {\n    setOngoing(false);\n    clearInterval(ongoingTimerId.current);\n\n    breakTimerId.current = setInterval(() => {\n      setRestTime((old) => old + 1);\n    }, 1000);\n  };\n\n  const showRestTime = () => {\n    if (restTime === 0) return null;\n\n    const restP = (\n      <p>\n        You have rested for{' '}\n        <Tag icon={<ClockCircleOutlined />} color=\"#f50\">\n          {_formatTimeFromSeconds(restTime)}\n        </Tag>\n      </p>\n    );\n    return (\n      <Alert className=\"rest-time-content\" message={restP} type=\"info\" icon={<CoffeeOutlined />} />\n    );\n  };\n  const timeProgressBar = () => {\n    const barPercent = (currentTime / maxTime) * 100;\n    const backgroundDiv = (\n      <div className=\"time-progress-bar-bg\" style={{ width: `${barPercent}%` }} />\n    );\n    return (\n      <div className=\"progress-container\" ref={containerRef}>\n        {sessions.map((session, i) => {\n          const style: React.CSSProperties = {\n            width: `${(session.time / 120) * 100}%`,\n            backgroundColor: session.color,\n          };\n\n          return (\n            <div key={i} className=\"session-item\" style={style}>\n              <p className=\"title\">{session.title}</p>\n              <span className=\"time\">{session.time}mins</span>\n            </div>\n          );\n        })}\n        {backgroundDiv}\n      </div>\n    );\n  };\n\n  const currentTimeAndTotalTimeContent = () => {\n    // const currentTimeStr = _formatTimeFromSeconds(currentTime);\n    const totalTime = _formatTimeFromSeconds(courseDuration);\n    return (\n      <div className=\"time-content\">\n        <Tag style={{ marginRight: 8 }}>{_formatTimeFromSeconds(currentTime)}</Tag>\n        <span style={{ color: 'gray' }}>/</span>\n        <Tag style={{ margin: '0 0 0 8px' }}>{_formatTimeFromSeconds(courseDuration)}</Tag>\n      </div>\n    );\n  };\n\n  const buttonsContent = () => {\n    return (\n      <div className=\"buttons-content\">\n        {ongoing ? (\n          <Button type=\"primary\" size=\"large\" onClick={handleTakeABreak}>\n            Take a Break\n          </Button>\n        ) : (\n          <Button type=\"primary\" size=\"large\" onClick={handleStart}>\n            {currentTime !== 0 ? 'Continue' : `Let's start the class.`}\n          </Button>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"time-progress-container\">\n      {showRestTime()}\n      {timeProgressBar()}\n      {currentTimeAndTotalTimeContent()}\n      {buttonsContent()}\n    </div>\n  );\n};\n\nexport default App;\n\nfunction _formatTimeFromSeconds(seconds: number): string {\n  const hours: number = Math.floor(seconds / 3600);\n  const minutes: number = Math.floor((seconds % 3600) / 60);\n  const remainingSeconds: number = seconds % 60;\n\n  const formattedHours: string = String(hours).padStart(2, '0');\n  const formattedMinutes: string = String(minutes).padStart(2, '0');\n  const formattedSeconds: string = String(remainingSeconds).padStart(2, '0');\n\n  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n}\n\n// Example usage:\n// const totalSeconds = 3665; // For example, 3665 seconds\n// const formattedTime = _formatTimeFromSeconds(totalSeconds);\n// console.log(formattedTime); // Output: \"01:01:05\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}