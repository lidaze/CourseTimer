{"ast":null,"code":"var _jsxFileName = \"/Users/joyful/Personal/Projects/class-timer/src/TimeProgress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport './TimeProgress.css';\nimport { Button, Space, Alert } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ({\n  sessions,\n  courseDuration = 120\n}) => {\n  _s();\n  const maxTime = 120; // 120 * 60;\n\n  const containerRef = useRef(null);\n  const [ongoing, setOngoing] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [restTime, setRestTime] = useState(0); // 休息时间\n  const ongoingTimerId = useRef();\n  const breakTimerId = useRef();\n  const handleStart = () => {\n    if (!containerRef.current) return;\n    setOngoing(true);\n    clearInterval(breakTimerId.current);\n    ongoingTimerId.current = setInterval(() => {\n      if (currentTime >= maxTime) {\n        clearInterval(ongoingTimerId.current);\n        setCurrentTime(maxTime);\n      }\n      setCurrentTime(t => t + 1);\n    }, 1000);\n  };\n  const handleTakeABreak = () => {\n    setOngoing(false);\n    clearInterval(ongoingTimerId.current);\n    breakTimerId.current = setInterval(() => {\n      setRestTime(old => old + 1);\n    }, 1000);\n  };\n  const showRestTime = () => {\n    if (restTime === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rest-time-content\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Warning Text\",\n        type: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \"You have rested for \", _formatTimeFromSeconds(restTime), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n  const timeProgressBar = () => {\n    const barPercent = currentTime / maxTime * 100;\n    const backgroundDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-progress-bar-bg\",\n      style: {\n        width: `${barPercent}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      ref: containerRef,\n      children: [sessions.map((session, i) => {\n        const style = {\n          width: `${session.time / 120 * 100}%`,\n          backgroundColor: session.color\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-item\",\n          style: style,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: session.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: [session.time, \"mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      }), backgroundDiv]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n  const timeContent = () => {\n    const currentTimeStr = _formatTimeFromSeconds(currentTime);\n    const totalTime = _formatTimeFromSeconds(courseDuration);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentTimeStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" / \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n  const buttonsContent = () => {\n    return /*#__PURE__*/_jsxDEV(Space, {\n      size: \"large\",\n      children: ongoing ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleTakeABreak,\n        children: \"Take a Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleStart,\n        children: currentTime !== 0 ? 'Continue' : `Let's start the class.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Time Progress Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Total time: 120mins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), showRestTime(), timeProgressBar(), timeContent(), buttonsContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RiV3KqCg5OX+qYL2GdgoR6c44hM=\");\n_c = App;\nexport default App;\nfunction _formatTimeFromSeconds(seconds) {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const remainingSeconds = seconds % 60;\n  const formattedHours = String(hours).padStart(2, '0');\n  const formattedMinutes = String(minutes).padStart(2, '0');\n  const formattedSeconds = String(remainingSeconds).padStart(2, '0');\n  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n}\n\n// Example usage:\n// const totalSeconds = 3665; // For example, 3665 seconds\n// const formattedTime = _formatTimeFromSeconds(totalSeconds);\n// console.log(formattedTime); // Output: \"01:01:05\"\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Button","Space","Alert","jsxDEV","_jsxDEV","App","sessions","courseDuration","_s","maxTime","containerRef","ongoing","setOngoing","currentTime","setCurrentTime","restTime","setRestTime","ongoingTimerId","breakTimerId","handleStart","current","clearInterval","setInterval","t","handleTakeABreak","old","showRestTime","className","children","message","type","fileName","_jsxFileName","lineNumber","columnNumber","_formatTimeFromSeconds","timeProgressBar","barPercent","backgroundDiv","style","width","ref","map","session","i","time","backgroundColor","color","title","timeContent","currentTimeStr","totalTime","buttonsContent","size","onClick","_c","seconds","hours","Math","floor","minutes","remainingSeconds","formattedHours","String","padStart","formattedMinutes","formattedSeconds","$RefreshReg$"],"sources":["/Users/joyful/Personal/Projects/class-timer/src/TimeProgress.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport './TimeProgress.css';\nimport { Button, Space, Alert } from 'antd';\n\ninterface Props {\n  sessions: { title: string; time: number; color: string }[];\n  courseDuration?: number; // minute\n}\n\nconst App: React.FC<Props> = ({ sessions, courseDuration = 120 }) => {\n  const maxTime = 120; // 120 * 60;\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [ongoing, setOngoing] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [restTime, setRestTime] = useState(0); // 休息时间\n  const ongoingTimerId = useRef<NodeJS.Timer>();\n  const breakTimerId = useRef<NodeJS.Timer>();\n\n  const handleStart = () => {\n    if (!containerRef.current) return;\n\n    setOngoing(true);\n    clearInterval(breakTimerId.current);\n\n    ongoingTimerId.current = setInterval(() => {\n      if (currentTime >= maxTime) {\n        clearInterval(ongoingTimerId.current);\n        setCurrentTime(maxTime);\n      }\n\n      setCurrentTime((t) => t + 1);\n    }, 1000);\n  };\n\n  const handleTakeABreak = () => {\n    setOngoing(false);\n    clearInterval(ongoingTimerId.current);\n\n    breakTimerId.current = setInterval(() => {\n      setRestTime((old) => old + 1);\n    }, 1000);\n  };\n\n  const showRestTime = () => {\n    if (restTime === 0) return null;\n\n    return (\n      <div className=\"rest-time-content\">\n          <Alert message=\"Warning Text\" type=\"warning\" />\n        You have rested for {_formatTimeFromSeconds(restTime)}.\n      </div>\n    );\n  };\n  const timeProgressBar = () => {\n    const barPercent = (currentTime / maxTime) * 100;\n    const backgroundDiv = (\n      <div className=\"time-progress-bar-bg\" style={{ width: `${barPercent}%` }} />\n    );\n    return (\n      <div className=\"progress-container\" ref={containerRef}>\n        {sessions.map((session, i) => {\n          const style: React.CSSProperties = {\n            width: `${(session.time / 120) * 100}%`,\n            backgroundColor: session.color,\n          };\n\n          return (\n            <div key={i} className=\"session-item\" style={style}>\n              <p className=\"title\">{session.title}</p>\n              <span className=\"time\">{session.time}mins</span>\n            </div>\n          );\n        })}\n        {backgroundDiv}\n      </div>\n    );\n  };\n\n  const timeContent = () => {\n    const currentTimeStr = _formatTimeFromSeconds(currentTime);\n    const totalTime = _formatTimeFromSeconds(courseDuration);\n    return (\n      <div className=\"time-content\">\n        <span>{currentTimeStr}</span>\n        <span> / </span>\n        <span>{totalTime}</span>\n      </div>\n    );\n  };\n\n  const buttonsContent = () => {\n    return (\n      <Space size=\"large\">\n        {ongoing ? (\n          <Button type=\"primary\" onClick={handleTakeABreak}>\n            Take a Break\n          </Button>\n        ) : (\n          <Button type=\"primary\" onClick={handleStart}>\n            {currentTime !== 0 ? 'Continue' : `Let's start the class.`}\n          </Button>\n        )}\n      </Space>\n    );\n  };\n\n  return (\n    <div className=\"time-progress-container\">\n      <div>Time Progress Bar</div>\n\n      <div>Total time: 120mins</div>\n      {showRestTime()}\n      {timeProgressBar()}\n      {timeContent()}\n      {buttonsContent()}\n    </div>\n  );\n};\n\nexport default App;\n\nfunction _formatTimeFromSeconds(seconds: number): string {\n  const hours: number = Math.floor(seconds / 3600);\n  const minutes: number = Math.floor((seconds % 3600) / 60);\n  const remainingSeconds: number = seconds % 60;\n\n  const formattedHours: string = String(hours).padStart(2, '0');\n  const formattedMinutes: string = String(minutes).padStart(2, '0');\n  const formattedSeconds: string = String(remainingSeconds).padStart(2, '0');\n\n  return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n}\n\n// Example usage:\n// const totalSeconds = 3665; // For example, 3665 seconds\n// const formattedTime = _formatTimeFromSeconds(totalSeconds);\n// console.log(formattedTime); // Output: \"01:01:05\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}